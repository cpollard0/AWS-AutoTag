import handler
import nose
import json

def test_S3ARN():
    event = json.loads('{"account": "012345678901", "region": "us-east-1", "detail": {"eventVersion": "1.04", "eventID": "7c111fb0-4b7c-48fc-ab4c-fbe2e2a4a2fc", "eventTime": "2017-03-31T19:08:59Z", "requestParameters": {"bucketName": "testbucket"}, "eventType": "AwsApiCall", "responseElements": {}, "awsRegion": "us-east-1", "eventName": "CreateBucket", "userIdentity": {"userName": "geniusatwork", "principalId": "012345678901", "sessionContext": {"attributes": {"creationDate": "2017-03-31T13:52:53Z", "mfaAuthenticated": "false"}}, "type": "Root", "arn": "arn:aws:iam::012345678901:root", "accountId": "012345678901"}, "eventSource": "s3.amazonaws.com", "requestID": "1FFEAA96DA8A3E91", "userAgent": "[AWS Console S3, aws-internal/3]", "sourceIPAddress": "AWS Internal"}, "detail-type": "AWS API Call via CloudTrail", "source": "aws.s3", "version": "0", "time": "2017-03-31T19:08:59Z", "id": "bd6c1033-52bf-43b2-acb7-31869b3a876e", "resources": []}')
    info = handler.extractInfoFromEvent(event)
    assert handler.buildARN(info) == 'arn:aws:s3:::testbucket'


def test_volumeARN():
    event = json.loads('{"account": "012345678901", "region": "us-east-1", "detail": {"eventVersion": "1.05", "eventID": "4ccb1184-db10-4862-8785-8481295b47dc", "eventTime": "2017-03-31T15:56:55Z", "requestParameters": {"encrypted": "False", "volumeType": "standard", "zone": "us-east-1a", "size": "1"}, "eventType": "AwsApiCall", "responseElements": {"status": "creating", "zone": "us-east-1a", "encrypted": "False", "volumeType": "standard", "volumeId": "vol-0d568a662b64f71e9", "requestId": "92443894-5180-4a8f-a8cd-2413cfc574d0", "createTime": 1490975815840, "size": "1"}, "awsRegion": "us-east-1", "eventName": "CreateVolume", "userIdentity": {"userName": "geniusatwork", "principalId": "012345678901", "accessKeyId": "ASIAISDNAYKYFS44F6AQ", "sessionContext": {"attributes": {"creationDate": "2017-03-31T13:52:53Z", "mfaAuthenticated": "false"}}, "type": "Root", "arn": "arn:aws:iam::012345678901:root", "accountId": "012345678901"}, "eventSource": "ec2.amazonaws.com", "requestID": "92443894-5180-4a8f-a8cd-2413cfc574d0", "userAgent": "console.ec2.amazonaws.com", "sourceIPAddress": "50.241.133.57"}, "detail-type": "AWS API Call via CloudTrail", "source": "aws.ec2", "version": "0", "time": "2017-03-31T15:56:55Z", "id": "de343239-1f51-41a6-afb2-fae0eca711b4", "resources": []}')
    info = handler.extractInfoFromEvent(event)
    assert handler.buildARN(info) == 'arn:aws:ec2:us-east-1:012345678901:volume/vol-0d568a662b64f71e9'


def test_dynamoDBARN():
    event = json.loads('{"account": "012345678901", "region": "us-east-1", "detail": {"eventVersion": "1.05", "eventID": "b6eb270c-549c-43ab-9bb4-6b299ff7e384", "eventTime": "2017-04-11T19:51:20Z", "requestParameters": {"keySchema": [{"keyType": "HASH", "attributeName": "hash_key"}], "tableName": "tablename", "attributeDefinitions": [{"attributeName": "asdf", "attributeType": "S"}], "provisionedThroughput": {"writeCapacityUnits": 5, "readCapacityUnits": 5}}, "eventType": "AwsApiCall", "responseElements": {"tableDescription": {"tableArn": "arn:aws:dynamodb:us-east-1:012345678901:table/dasf", "attributeDefinitions": [{"attributeName": "asdf", "attributeType": "S"}], "provisionedThroughput": {"writeCapacityUnits": 5, "numberOfDecreasesToday": 0, "readCapacityUnits": 5}, "tableSizeBytes": 0, "tableName": "dasf", "tableStatus": "CREATING", "tableId": "8eba588a-e7c9-4678-b287-a0fdb5985167", "keySchema": [{"keyType": "HASH", "attributeName": "asdf"}], "itemCount": 0, "creationDateTime": "Apr 11, 2017 7:51:20 PM"}}, "awsRegion": "us-east-1", "eventName": "CreateTable", "userIdentity": {"userName": "geniusatwork", "principalId": "012345678901", "accessKeyId": "ASIAJQPDAB5KWKOTYQRA", "sessionContext": {"attributes": {"creationDate": "2017-04-11T13:28:11Z", "mfaAuthenticated": "false"}}, "type": "Root", "arn": "arn:aws:iam::012345678901:root", "accountId": "012345678901"}, "eventSource": "dynamodb.amazonaws.com", "requestID": "DJ75SEMTLM0FD9M6FH29KFNQQRVV4KQNSO5AEMVJF66Q9ASUAAJG", "apiVersion": "2012-08-10", "userAgent": "console.amazonaws.com", "sourceIPAddress": "50.241.133.57"}, "detail-type": "AWS API Call via CloudTrail", "source": "aws.dynamodb", "version": "0", "time": "2017-04-11T19:51:20Z", "id": "6cc624d9-a20d-4970-b4fc-9d803c9d1944", "resources": []}')
    info = handler.extractInfoFromEvent(event)
    assert handler.buildARN(info) == 'arn:aws:dynamodb:us-east-1:012345678901:table/tablename'

def test_classic_ELBARN():
    event = json.loads('{"account": "012345678901", "region": "us-east-1", "detail": {"eventVersion": "1.04", "eventID": "c5b9c672-2245-4c78-b05d-953aef1c2780", "eventTime": "2017-04-16T20:36:25Z", "requestParameters": {"subnets": ["subnet-9b859fd2", "subnet-a63709fe"], "listeners": [{"instancePort": 80, "loadBalancerPort": 80, "protocol": "HTTP", "instanceProtocol": "HTTP"}], "scheme": "internet-facing", "securityGroups": ["sg-13584168"], "loadBalancerName": "dgdgad"}, "eventType": "AwsApiCall", "responseElements": {"dNSName": "dgdgad-1483415557.us-east-1.elb.amazonaws.com"}, "awsRegion": "us-east-1", "eventName": "CreateLoadBalancer", "userIdentity": {"userName": "geniusatwork", "principalId": "012345678901", "accessKeyId": "ASIAJVKEAT5RWUVK4WWQ", "sessionContext": {"attributes": {"creationDate": "2017-04-16T20:24:13Z", "mfaAuthenticated": "false"}}, "type": "Root", "arn": "arn:aws:iam::012345678901:root", "accountId": "012345678901"}, "eventSource": "elasticloadbalancing.amazonaws.com", "requestID": "5c0356bd-22e4-11e7-aadb-775f8fbe0882", "apiVersion": "2012-06-01", "userAgent": "console.ec2.amazonaws.com", "sourceIPAddress": "54.144.204.138"}, "detail-type": "AWS API Call via CloudTrail", "source": "aws.elasticloadbalancing", "version": "0", "time": "2017-04-16T20:36:25Z", "id": "3c379d07-f6f3-40e7-81e4-f35b019aa69a", "resources": []}')
    info = handler.extractInfoFromEvent(event)
    print(handler.buildARN(info))
    assert handler.buildARN(info) == 'arn:aws:elasticloadbalancing:us-east-1:012345678901:loadbalancer/dgdgad'